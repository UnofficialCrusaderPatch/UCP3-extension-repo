local writeCode = core.writeCode
local writeBytes = core.writeBytes
local AOBScan = core.AOBScan
local compile = core.compile
local calculateCodeSize = core.calculateCodeSize
local allocate = core.allocate
local allocateCode = core.allocateCode
local getRelativeAddress = core.getRelativeAddress
local relTo = core.relTo
local relToLabel = core.relToLabel
local byteRelTo = core.byteRelTo
local readInteger = core.readInteger

local itob = utils.itob
local smallIntegerToBytes = utils.smallIntegerToBytes

-- /*
-- Override Identity Menu
-- */
--____NEW CHANGE: o_override_identity_menu
return {

    init = function(self, config)
        -- F6286
        self.o_override_identity_menu_edit = AOBScan("C7 43 14 00 00 00 00 8B 06 83 F8 66")
    end,

    enable = function(self, config)
        
        -- new DefaultHeader("o_override_identity_menu")
        local code = {
                0x38, 0x64, 0x61, 0x00, 
        }
        local NormalCrusaderUnitListAddress = allocate(calculateCodeSize(code))
        writeBytes(NormalCrusaderUnitListAddress, compile(code,NormalCrusaderUnitListAddress))
        local code = {
                0x28, 0x65, 0x61, 0x00, 
        }
        local NormalArabUnitListAddress = allocate(calculateCodeSize(code))
        writeBytes(NormalArabUnitListAddress, compile(code,NormalArabUnitListAddress))
        local code = {
                0xC8, 0x65, 0x61, 0x00, 
        }
        local ExtremeNormalCrusaderUnitListAddress = allocate(calculateCodeSize(code))
        writeBytes(ExtremeNormalCrusaderUnitListAddress, compile(code,ExtremeNormalCrusaderUnitListAddress))
        local code = {
                0xB8, 0x66, 0x61, 0x00, 
        }
        local ExtremeNormalArabUnitListAddress = allocate(calculateCodeSize(code))
        writeBytes(ExtremeNormalArabUnitListAddress, compile(code,ExtremeNormalArabUnitListAddress))
        local code = {
                0x00, 0x00, 0x00, 0x00, 
        }
        local CurrentlySelectedRangedUnit = allocate(calculateCodeSize(code))
        writeBytes(CurrentlySelectedRangedUnit, compile(code,CurrentlySelectedRangedUnit))
        local code = {
                0x00, 0x00, 0x00, 0x00, 
        }
        local CurrentlySelectedMeleeUnit = allocate(calculateCodeSize(code))
        writeBytes(CurrentlySelectedMeleeUnit, compile(code,CurrentlySelectedMeleeUnit))
        local code = {
                0x00, 0x00, 0x00, 0x00, 
        }
        local IsExtremeBool = allocate(calculateCodeSize(code))
        writeBytes(IsExtremeBool, compile(code,IsExtremeBool))
        local code = {
                0x66, 0x9C,  -- pushf
                0x50,  -- push eax
                0x51,  -- push ecx
                0x52,  -- push edx
                0xBA, 0x00, 0x00, 0x00, 0x00,  -- mov edx,00
                0xA1, itob(NormalCrusaderUnitListAddress),  -- mov eax,NormalCrusaderUnitListAddress
                0x50,  -- push eax
                0xB8, itob(IsExtremeBool),  -- mov eax,IsExtremeBool
                0x83, 0x38, 0x01,  -- cmp [eax],01
                0x58,  -- pop eax
                0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,  -- jne short 5
                0xA1, itob(ExtremeNormalCrusaderUnitListAddress),  -- mov eax,ExtremeNormalCrusaderUnitListAddress
             -- Set ranged units to 0 in list
                "ResetRangedUnitsInList", 
                0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x30, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 
                0x83, 0x3D, itob(CurrentlySelectedRangedUnit), 0x00,  -- cmp dword ptr [CurrentlySelectedRangedUnit],00
                0x0F, 0x85, 0x20, 0x00, 0x00, 0x00,  -- jne short 20
                0xC7, 0x00, 0x06, 0x00, 0x00, 0x00,  -- mov [eax],06
                0xC7, 0x46, 0x20, 0x7C, 0x01, 0x00, 0x40,  -- mov [esi+20],4000017C
                0xC7, 0x46, 0x08, 0xAB, 0x00, 0x00, 0x00,  -- mov [esi+08],000000AB
                0xC7, 0x46, 0x04, 0xC0, 0x00, 0x00, 0x00,  -- mov [esi+08],000000C0
                0xE9, 0xE1, 0x00, 0x00, 0x00,  -- jmp short E1
                0x83, 0x3D, itob(CurrentlySelectedRangedUnit), 0x01,  -- cmp dword ptr [CurrentlySelectedRangedUnit],01
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x04, 0x03, 0x00, 0x00, 0x00,  -- mov [eax+04],03
                0xC7, 0x46, 0x20, 0x7F, 0x01, 0x00, 0x40,  -- mov [esi+20],4000017F
                0xC7, 0x46, 0x08, 0xB9, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B9
                0xC7, 0x46, 0x04, 0xC1, 0x00, 0x00, 0x00,  -- mov [esi+08],000000C1
                0xE9, 0xB3, 0x00, 0x00, 0x00,  -- jmp short B3
                0x83, 0x3D, itob(CurrentlySelectedRangedUnit), 0x02,  -- cmp dword ptr [CurrentlySelectedRangedUnit],02
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x28, 0x05, 0x00, 0x00, 0x00,  -- mov [eax+28],05
                0xC7, 0x46, 0x20, 0x1C, 0x02, 0x00, 0x40,  -- mov [esi+20],4000021C
                0xC7, 0x46, 0x08, 0xB1, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B1
                0xC7, 0x46, 0x04, 0xC1, 0x00, 0x00, 0x00,  -- mov [esi+08],000000C1
                0xE9, 0x85, 0x00, 0x00, 0x00,  -- jmp short 85
                0x83, 0x3D, itob(CurrentlySelectedRangedUnit), 0x03,  -- cmp dword ptr [CurrentlySelectedRangedUnit],03
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x30, 0x09, 0x00, 0x00, 0x00,  -- mov [eax+30],09
                0xC7, 0x46, 0x20, 0x1E, 0x02, 0x00, 0x40,  -- mov [esi+20],4000021E
                0xC7, 0x46, 0x08, 0xB2, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B2
                0xC7, 0x46, 0x04, 0xC1, 0x00, 0x00, 0x00,  -- mov [esi+08],000000C1
                0xE9, 0x57, 0x00, 0x00, 0x00,  -- jmp short 57
                0x83, 0x3D, itob(CurrentlySelectedRangedUnit), 0x04,  -- cmp dword ptr [CurrentlySelectedRangedUnit],04
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x38, 0x03, 0x00, 0x00, 0x00,  -- mov [eax+30],03
                0xC7, 0x46, 0x20, 0x20, 0x02, 0x00, 0x40,  -- mov [esi+20],40000220
                0xC7, 0x46, 0x08, 0xAC, 0x00, 0x00, 0x00,  -- mov [esi+08],000000AC
                0xC7, 0x46, 0x04, 0xBB, 0x00, 0x00, 0x00,  -- mov [esi+08],000000BB
                0xE9, 0x29, 0x00, 0x00, 0x00,  -- jmp short 29
                0x83, 0x3D, itob(CurrentlySelectedRangedUnit), 0x05,  -- cmp dword ptr [CurrentlySelectedRangedUnit],05
                0x0F, 0x85, 0x1C, 0x00, 0x00, 0x00,  -- jne short 1C
                0xC7, 0x40, 0x40, 0x03, 0x00, 0x00, 0x00,  -- mov [eax+30],03
                0xC7, 0x46, 0x20, 0x22, 0x02, 0x00, 0x40,  -- mov [esi+20],40000222
                0xC7, 0x46, 0x08, 0xB9, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B9
                0xC7, 0x46, 0x04, 0xC1, 0x00, 0x00, 0x00,  -- mov [esi+08],000000C1
                0x83, 0xFA, 0x1,  -- cmp edx,01
                0x0F, 0x84, 0x20, 0x00, 0x00, 0x00,  -- je short 20
                0x42,  -- inc edx
                0x50,  -- push eax
                0xB8, itob(IsExtremeBool),  -- mov eax,IsExtremeBool
                0x83, 0x38, 0x01,  -- cmp [eax],01
                0x58,  -- pop eax
                0xA1, itob(NormalArabUnitListAddress),  -- mov eax,NormalArabUnitListAddress
                0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,  -- jne short 5
                0xA1, itob(ExtremeNormalArabUnitListAddress),  -- mov eax,ExtremeNormalArabUnitListAddress
                0xE9, relToLabel("ResetRangedUnitsInList", -4),  -- jmp ResetRangedUnitsInList
                0x5A,  -- pop edx
                0x59,  -- pop ecx
                0x58,  -- pop eax
                0x66, 0x9D,  -- popf
                0xC3,  -- ret
        }
        local SetSelectedRangedUnit = allocateCode(calculateCodeSize(code))
        writeCode(SetSelectedRangedUnit, code)
        local code = {
                0x66, 0x9C,  -- pushf
                0xFF, 0x05, itob(CurrentlySelectedRangedUnit),  -- inc [CurrentlySelectedRangedUnit]
                0x83, 0x3D, itob(CurrentlySelectedRangedUnit), 0x06,  -- cmp [CurrentlySelectedRangedUnit],06
                0xF, 0x8C, 0x0A, 0x00, 0x00, 0x00,  -- jl short A
                0xC7, 0x05, itob(CurrentlySelectedRangedUnit), 0x00, 0x00, 0x00, 0x00,  -- mov [CurrentlySelectedRangedUnit],00
                0xE8, function(index) return itob(getRelativeAddress(index, SetSelectedRangedUnit, -4)) end, 
                0x66, 0x9D,  -- popf
                0xC3,  -- ret
        }
        local RangedUnitButtonClick = allocateCode(calculateCodeSize(code))
        writeCode(RangedUnitButtonClick, code)
        local code = {
                0x66, 0x9C,  -- pushf
                0x50,  -- push eax
                0x51,  -- push ecx
                0x52,  -- push edx
                0xBA, 0x00, 0x00, 0x00, 0x00,  -- mov edx,00
                0xA1, itob(NormalCrusaderUnitListAddress),  -- mov eax,NormalCrusaderUnitListAddress
                0x50,  -- push eax
                0xB8, itob(IsExtremeBool),  -- mov eax,IsExtremeBool
                0x83, 0x38, 0x01,  -- cmp [eax],01
                0x58,  -- pop eax
                0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,  -- jne short 5
                0xA1, itob(ExtremeNormalCrusaderUnitListAddress),  -- mov eax,ExtremeNormalCrusaderUnitListAddress
             -- Set melee units to 0 in list
                "ResetMeleeUnitsInList", 
                0xC7, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x0C, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x18, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x2C, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x34, 0x00, 0x00, 0x00, 0x00, 
                0xC7, 0x40, 0x3C, 0x00, 0x00, 0x00, 0x00, 
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x00,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],00
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x08, 0x07, 0x00, 0x00, 0x00,  -- mov [eax+08],07
                0xC7, 0x46, 0x20, 0x7D, 0x01, 0x00, 0x40,  -- mov [esi+20],4000017D
                0xC7, 0x46, 0x08, 0xB9, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B9
                0xC7, 0x46, 0x04, 0xF7, 0x00, 0x00, 0x00,  -- mov [esi+08],000000F7
                0xE9, 0x99, 0x01, 0x00, 0x00,  -- jmp short 99 01
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x01,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],01
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x0C, 0x03, 0x00, 0x00, 0x00,  -- mov [eax+0C],03
                0xC7, 0x46, 0x20, 0x80, 0x01, 0x00, 0x40,  -- mov [esi+20],40000180
                0xC7, 0x46, 0x08, 0xA5, 0x00, 0x00, 0x00,  -- mov [esi+08],000000A5
                0xC7, 0x46, 0x04, 0xFB, 0x00, 0x00, 0x00,  -- mov [esi+08],000000FB
                0xE9, 0x6B, 0x01, 0x00, 0x00,  -- jmp short 6B 01
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x02,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],02
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x10, 0x04, 0x00, 0x00, 0x00,  -- mov [eax+10],04
                0xC7, 0x46, 0x20, 0x7E, 0x01, 0x00, 0x40,  -- mov [esi+20],4000017E
                0xC7, 0x46, 0x08, 0xB9, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B9
                0xC7, 0x46, 0x04, 0xFB, 0x00, 0x00, 0x00,  -- mov [esi+08],000000FB
                0xE9, 0x3D, 0x01, 0x00, 0x00,  -- jmp short 3D 01
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x03,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],03
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x14, 0x02, 0x00, 0x00, 0x00,  -- mov [eax+14],02
                0xC7, 0x46, 0x20, 0x81, 0x01, 0x00, 0x40,  -- mov [esi+20],40000181
                0xC7, 0x46, 0x08, 0xB1, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B1
                0xC7, 0x46, 0x04, 0xFB, 0x00, 0x00, 0x00,  -- mov [esi+08],000000FB
                0xE9, 0x0F, 0x01, 0x00, 0x00,  -- jmp short 0F 01
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x04,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],04
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x18, 0x01, 0x00, 0x00, 0x00,  -- mov [eax+18],01
                0xC7, 0x46, 0x20, 0x82, 0x01, 0x00, 0x40,  -- mov [esi+20],40000182
                0xC7, 0x46, 0x08, 0xA5, 0x00, 0x00, 0x00,  -- mov [esi+08],000000A5
                0xC7, 0x46, 0x04, 0xF3, 0x00, 0x00, 0x00,  -- mov [esi+08],000000F3
                0xE9, 0xE1, 0x00, 0x00, 0x00,  -- jmp short E1
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x05,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],05
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x20, 0x03, 0x00, 0x00, 0x00,  -- mov [eax+20],03
                0xC7, 0x46, 0x20, 0x83, 0x01, 0x00, 0x40,  -- mov [esi+20],40000183
                0xC7, 0x46, 0x08, 0xB9, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B9
                0xC7, 0x46, 0x04, 0xFA, 0x00, 0x00, 0x00,  -- mov [esi+08],000000FA
                0xE9, 0xB3, 0x00, 0x00, 0x00,  -- jmp short B3
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x06,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],06
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x24, 0x06, 0x00, 0x00, 0x00,  -- mov [eax+24],06
                0xC7, 0x46, 0x20, 0x86, 0x01, 0x00, 0x40,  -- mov [esi+20],40000186
                0xC7, 0x46, 0x08, 0xB9, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B9
                0xC7, 0x46, 0x04, 0xFA, 0x00, 0x00, 0x00,  -- mov [esi+08],000000FA
                0xE9, 0x85, 0x00, 0x00, 0x00,  -- jmp short 85
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x07,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],07
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x2C, 0x08, 0x00, 0x00, 0x00,  -- mov [eax+2C],08
                0xC7, 0x46, 0x20, 0x1D, 0x02, 0x00, 0x40,  -- mov [esi+20],4000021D
                0xC7, 0x46, 0x08, 0xB0, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B0
                0xC7, 0x46, 0x04, 0xFB, 0x00, 0x00, 0x00,  -- mov [esi+08],000000FB
                0xE9, 0x57, 0x00, 0x00, 0x00,  -- jmp short 57
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x08,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],08
                0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,  -- jne short 21
                0xC7, 0x40, 0x34, 0x04, 0x00, 0x00, 0x00,  -- mov [eax+34],04
                0xC7, 0x46, 0x20, 0x1F, 0x02, 0x00, 0x40,  -- mov [esi+20],4000021F
                0xC7, 0x46, 0x08, 0xB8, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B8
                0xC7, 0x46, 0x04, 0xFA, 0x00, 0x00, 0x00,  -- mov [esi+08],000000FA
                0xE9, 0x29, 0x00, 0x00, 0x00,  -- jmp short 29
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x09,  -- cmp dword ptr [CurrentlySelectedMeleeUnit],09
                0x0F, 0x85, 0x1C, 0x00, 0x00, 0x00,  -- jne short 1C
                0xC7, 0x40, 0x3C, 0x03, 0x00, 0x00, 0x00,  -- mov [eax+3C],03
                0xC7, 0x46, 0x20, 0x21, 0x02, 0x00, 0x40,  -- mov [esi+20],40000221
                0xC7, 0x46, 0x08, 0xB0, 0x00, 0x00, 0x00,  -- mov [esi+08],000000B0
                0xC7, 0x46, 0x04, 0xFB, 0x00, 0x00, 0x00,  -- mov [esi+08],000000FB
                0x83, 0xFA, 0x1,  -- cmp edx,01
                0x0F, 0x84, 0x20, 0x00, 0x00, 0x00,  -- je short 20
                0x42,  -- inc edx
                0x50,  -- push eax
                0xB8, itob(IsExtremeBool),  -- mov eax,IsExtremeBool
                0x83, 0x38, 0x01,  -- cmp [eax],01
                0x58,  -- pop eax
                0xA1, itob(NormalArabUnitListAddress),  -- mov eax,NormalArabUnitListAddress
                0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,  -- jne short 5
                0xA1, itob(ExtremeNormalArabUnitListAddress),  -- mov eax,ExtremeNormalArabUnitListAddress
                0xE9, relToLabel("ResetMeleeUnitsInList", -4),  -- jmp ResetMeleeUnitsInList
                0x5A,  -- pop edx
                0x59,  -- pop ecx
                0x58,  -- pop eax
                0x66, 0x9D,  -- popf
                0xC3,  -- ret
        }
        local SetSelectedMeleeUnit = allocateCode(calculateCodeSize(code))
        writeCode(SetSelectedMeleeUnit, code)
        local code = {
                0x66, 0x9C,  -- pushf
                0xFF, 0x05, itob(CurrentlySelectedMeleeUnit),  -- inc [CurrentlySelectedMeleeUnit]
                0x83, 0x3D, itob(CurrentlySelectedMeleeUnit), 0x0A,  -- cmp [CurrentlySelectedMeleeUnit],0A
                0xF, 0x8C, 0x0A, 0x00, 0x00, 0x00,  -- jl short A
                0xC7, 0x05, itob(CurrentlySelectedMeleeUnit), 0x00, 0x00, 0x00, 0x00,  -- mov [CurrentlySelectedMeleeUnit],00
                0xE8, function(index) return itob(getRelativeAddress(index, SetSelectedMeleeUnit, -4)) end, 
                0x66, 0x9D,  -- popf
                0xC3,  -- ret
        }
        local MeleeUnitButtonClick = allocateCode(calculateCodeSize(code))
        writeCode(MeleeUnitButtonClick, code)
        local code = {
                0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x1D, 0x49, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x49, 0x00, 0x15, 0x00, 0x00, 0x00, 0x70, 0x1D, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0xB3, 0x3D, 0x00, 0xEC, 0xB3, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0xDA, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x49, 0x00, 0x16, 0x00, 0x00, 0x00, 0x70, 0x1D, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xB2, 0x3D, 0x00, 0x5E, 0xB2, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0xB9, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x49, 0x00, 0x17, 0x00, 0x00, 0x00, 0x70, 0x1D, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x99, 0x00, 0x00, 0x00, 0xB9, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x49, 0x00, 0x28, 0x00, 0x00, 0x00, 0x70, 0x1D, 0x49, 0x00, 0xF2, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDB, 0xAF, 0x3D, 0x00, 0xDB, 0xAF, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB7, 0x02, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x99, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x49, 0x00, 0x29, 0x00, 0x00, 0x00, 0x70, 0x1D, 0x49, 0x00, 0xF3, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xB0, 0x3D, 0x00, 0xFA, 0xB0, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB9, 0x02, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x3D, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x3F, 0x46, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x01, 0x9C, 0xFF, 0xFF, 0xFF, 0x76, 0x01, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0x30, 0x3D, 0x49, 0x00, 0x11, 0x00, 0x00, 0x00, 0xF0, 0x3F, 0x46, 0x00, 0x70, 0x01, 0x00, 0x40, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xCC, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0xCC, 0x47, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0x13, 0x01, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x10, 0xCC, 0x47, 0x00, 0x04, 0x00, 0x00, 0x00, 0xA0, 0xCC, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xA0, 0x86, 0x00, 0xC3, 0xA0, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x00, 0x00, 0xAB, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, itob(RangedUnitButtonClick), 0x11, 0x00, 0x00, 0x00, 0xF0, 0x3F, 0x46, 0x00, 0x7C, 0x01, 0x00, 0x40, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0xB8, 0x54, 0x00, 0x3D, 0xB8, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0xF7, 0x00, 0x00, 0x00, 0xB9, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, itob(MeleeUnitButtonClick), 0x11, 0x00, 0x00, 0x00, 0xF0, 0x3F, 0x46, 0x00, 0x7D, 0x01, 0x00, 0x40, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0xB8, 0x54, 0x00, 0x3D, 0xB8, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0x28, 0x67, 0xB9, 0x00, 
                0x66, 0x00, 0x00, 0x00, 
        }
        local IdentityMenuButtonArray = allocate(calculateCodeSize(code))
        writeBytes(IdentityMenuButtonArray, compile(code,IdentityMenuButtonArray))
        local code = {
                0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x1E, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0, 0x1E, 0x49, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x40, 0x1E, 0x49, 0x00, 0x15, 0x00, 0x00, 0x00, 0xD0, 0x1E, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0xDA, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x40, 0x1E, 0x49, 0x00, 0x16, 0x00, 0x00, 0x00, 0xD0, 0x1E, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0xB9, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x40, 0x1E, 0x49, 0x00, 0x17, 0x00, 0x00, 0x00, 0xD0, 0x1E, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x99, 0x00, 0x00, 0x00, 0xB9, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x40, 0x1E, 0x49, 0x00, 0x28, 0x00, 0x00, 0x00, 0xD0, 0x1E, 0x49, 0x00, 0xF2, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB7, 0x02, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x99, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x40, 0x1E, 0x49, 0x00, 0x29, 0x00, 0x00, 0x00, 0xD0, 0x1E, 0x49, 0x00, 0xF3, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB9, 0x02, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x3E, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x46, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x28, 0x00, 0x00, 0x00, 0x13, 0x01, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0x90, 0x3E, 0x49, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x42, 0x46, 0x00, 0x70, 0x01, 0x00, 0x40, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xCD, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xCE, 0x47, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0x13, 0x01, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0xE0, 0xCD, 0x47, 0x00, 0x04, 0x00, 0x00, 0x00, 0x70, 0xCE, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x00, 0x00, 0xAB, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, itob(RangedUnitButtonClick), 0x11, 0x00, 0x00, 0x00, 0x00, 0x42, 0x46, 0x00, 0x7C, 0x01, 0x00, 0x40, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0xB8, 0x54, 0x00, 0x3D, 0xB8, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x03, 0x00, 0x00, 0x02, 0xF7, 0x00, 0x00, 0x00, 0xB9, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, itob(MeleeUnitButtonClick), 0x11, 0x00, 0x00, 0x00, 0x00, 0x42, 0x46, 0x00, 0x7D, 0x01, 0x00, 0x40, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0xB8, 0x54, 0x00, 0x3D, 0xB8, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x01, 0x00, 0x00, 0xC8, 0x68, 0xB9, 0x00, 
                0x66, 0x00, 0x00, 0x00, 
        }
        local IdentityMenuButtonArrayExtreme = allocate(calculateCodeSize(code))
        writeBytes(IdentityMenuButtonArrayExtreme, compile(code,IdentityMenuButtonArrayExtreme))
        local code = {
                0x50,  -- push eax
                0xB8, 0x20, 0x01, 0x40, 0x00,  -- mov eax,00000120
                0x81, 0x38, 0xBD, 0x93, 0xAF, 0x5A,  -- cmp [eax],5AAF93BD
                0xB8, itob(IsExtremeBool),  -- mov eax,IsExtremeBool
                0x75, 0x8,  -- jne 8
                0xC7, 0x00, 0x00, 0x00, 0x00, 0x00,  -- mov [eax],00
                0x58,  -- pop eax
                0xC3,  -- ret
                0xC7, 0x00, 0x01, 0x00, 0x00, 0x00,  -- mov [eax],01
                0x58,  -- pop eax
                0xC3,  -- ret
        }
        local IsExtremeToBool = allocateCode(calculateCodeSize(code))
        writeCode(IsExtremeToBool, code)
        local code = {
                0x66, 0x9C,  -- pushf
                0xE8, function(index) return itob(getRelativeAddress(index, IsExtremeToBool, -4)) end,  -- call IsExtremeToBool
                0x50,  -- push eax
                0xB8, itob(IsExtremeBool),  -- mov eax,IsExtremeBool
                0x83, 0x38, 0x01,  -- cmp [eax],01
                0x58,  -- pop eax
                0x53,  -- push ebx
                0x75, 0xd,  -- jne D
                0x81, 0xFE, 0xA8, 0x13, 0x60, 0x00,  -- cmp esi,"Stronghold_Crusader_Extreme.exe"+2013A8
                0xBB, itob(IdentityMenuButtonArrayExtreme),  -- mov ebx,IdentityMenuButtonArrayExtreme
                0xEB, 0xb,  -- jmp B
                0x81, 0xFE, 0x98, 0x14, 0x60, 0x00,  -- cmp esi,"Stronghold Crusader.exe"+201498
                0xBB, itob(IdentityMenuButtonArray),  -- mov ebx,IdentityMenuButtonArray
                0x0F, 0x85, 0x02, 0x00, 0x00, 0x00,  -- jne short 2
                0x89, 0xDE,  -- mov esi,ebx
                0x5B,  -- pop ebx
                0x66, 0x9D,  -- popf
                0xC7, 0x43, 0x14, 0x00, 0x00, 0x00, 0x00,  -- mov [ebx+14],00
                0xC3,  -- ret
        }
        local OverrideIdentityMenuRender = allocateCode(calculateCodeSize(code))
        writeCode(OverrideIdentityMenuRender, code)
        local code = {
            0xE9, function(address, index, labels)
                local hook = {
                    0xE8, function(index) return itob(getRelativeAddress(index, OverrideIdentityMenuRender, -4)) end,  -- jmp
                    0xe9, relTo(self.o_override_identity_menu_edit + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 7, -4)
                }
                local hookSize = calculateCodeSize(hook)
                local hookAddress = allocateCode(hookSize)
                writeCode(hookAddress, hook)
                return itob(getRelativeAddress(address, hookAddress, -4))
            end,
            0x90, 0x90
        }
        writeCode(self.o_override_identity_menu_edit + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0 + 0, code)
    end,

    disable = function(self, config)
        error("not implemented")
    end,

}
